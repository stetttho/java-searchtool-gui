 As a C++ programmer moving into the C#/.NET world, I found this book essential to good .NET program design. With VS 7, Intellisense and MSDN samples it's possible to just "jump in" and start writing Windows apps in C#, but I wouldn't recommend it if you have the time to read this book first. Richter describes in detail the intricacies of compilation, IL, value types, boxing, interfaces, the garbage collector, and other things that work slightly different from how they did in the C++ world. It WILL help you know where to expect those subtle bugs and how to avoid them. In addition, Richter covers a lot of the new features built in the language that will save you development time. He doesn't tackle most of the specialized classes in the .NET Framework like other books (e.g. the Wrox one) does, but he does go in depth into the ones that will be used by most programmers - for example, the new things you can do with strings (all Unicode, with built in text conversion routines and methods for locale-sensitive comparisons), the new type objects that all objects expose (not just strong typing, you can query the inheritance model and all sorts of good stuff), and some delightful tricks you can do with enums that will make you fall in love with them all over again. If you tried to read Advanced Windows and were scared off or bored, I want to reassure you that Applied Microsoft .NET Framework Programming is more readable than Advanced Windows was - you can actually hole up in a little cafe and read it from end to end if you want to, in about a day and a half. It's also a little more accessible to people without a theoretical background or college degree in computer science. But rest assured, Richter goes into quite enough detail for the compiler geeks among us. Understanding of COM, object-oriented programming, interfaces, stack vs. heap memory, etc. is required. I thought I would be dragged into .NET kicking and screaming, but I've become quite the evangelist - partially due to this book.     