 This is a nice change for the better! Instead of introducing the basics  and then going on to class design, inheritance, and polymorphism, Andrew  and Barbara delay things such as class design until the latter part of the  book and instead launch straight into use of the STL, illustrated with  practical examples of how to use STL containers and algorithms to solve  programming problems. As far as I am concerned, this is definitely a  change for the better. Most programming projects I see heavily abuse  inheritance to do things that would have better been done with templates  and, as a rule, most C++ projects continue to ignore the STL, even though  it is probably the most fundamental contribution to C++ programmer  productivity in years. Following this book, readers are encouraged to use  STL from the word go, which is as it should be. The language and flow of  the book are excellent, and the presentation is very lucid. What really  shines through is that both authors are experts on the topic and really  know what they are talking about. The explanations of language features are  complete, correct, and precise. There is none of the muddled exposition  that I find in so many other C++ books. The teaching experience that Andrew  and Barbara have gained over the years is truly reflected in the prose. The  book anticipates many questions and typically answers them just at the  right time, namely, when the question is just about to pop into the  reader's head. Information density of the book is high. A lot of  information is packed into few words, so the reader has to concentrate on  what is being said, and skipping paragraphs is not something that I would  recommend. The concentration, however, is well repaid by the large amount  of solid knowledge that is imparted: I believe that no other C++ book  manages to convey as much information per page as this one. To me, the  target audience are people who have done some programming in other  languages and do not know C++. (I would not recommend the book for people  who have never programmed before, unless they are very determined readers.)  More seasoned C++ programmers also will get good value. And, if you are an  experienced C++ programmer, but haven't much used the standard library up  to now, there is still plenty of meat to be found: there are enough gems of  advice in the book for it appeal to people who have considerable C++  experience. This is an excellent effort from two experts in the field. I  recommend it!     