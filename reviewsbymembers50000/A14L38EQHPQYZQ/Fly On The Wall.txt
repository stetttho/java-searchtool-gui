 I swear that Booch was spying on several of the so called  "projects" that I was a developer on.  It is simply amazing to me  how many times the so-called "Harvard School of Business"  techniques are used to manage an OO project!  I have learned through the  school of hard knocks what Booch has written about in this book (wish I had  discovered it sooner, a couple of pointy haired bosses could have used  it!).  Anyway, Booch breaks OO management into seven chapters:  First  Principles, Products and Process, The Macro Process, The Micro Process, The  Development Team, Management and Planning, and Special Topics.  I  especially found interesting his descriptions on how NOT to run an OO  project (oh, and he gives plenty of examples on HOW to run one too!).   Booch covers OOA, artifacts, OOD, methodolgies (a biggy with me even on a  one person project), evolution (gosh! who would have thought you could have  cyclical development???).  Identification of classes, objects, symantecs,  relationships, etc.  He then tackles the team environment:  roles and  responsibilities (especially the manager's responsibilities!), resource  allocation, and tools (this book is not a plug for Rational Rose BTW).   Finally:  managing risk, planning and scheduling, staffing, costing (a  tough one), Quality Assurance (this is not testing!), and he talks some  about projects in crisis and what to do.  The last chapter is kind of a  catch-all containing:  User-centric, Data-centric, and Computation-centric  systems discussions, along with Distributed, Legacy, Information  Management, and Real Time Systems.  The appendicies contain: a summary of  recommended practices (for those wanting to create a methodology), and  rules of thumb.  There is a great index, bibliography and glossary to tie  up the package nicely.  Booch has a terrific writing style presenting what  would normally be a dry subject!  Definitely for the computer Project  Manager's shelf!     