 I found this book very useful when learning about POSIX threads though the whole impression is a bit mixed.  The book gives everything you need to start writing POSIX-style multithreaded applications. Very complicated (in my opinion) issues of multithreading are explained very clearly. Every new concept is immediately illustrated with a sample code. The appendix contains a detailed description of all mentioned pthread functions, so you can use it as a reference too. At the same time I am not sure if book is completely up-to-date. E.g., in chapter 7 the author explains in details what is a read/write lock and presents a code with a mutex and 2 condition variables to use as an r/w lock. In the appendix he says that r/w lock can be incorporated into POSIX as a separate entity in future. I work with Solaris 8 and I found that r/w locks are already in my POSIX library. The style of book is quite special, you may love it, or you may hate it. Sometimes the very basic concepts are explained in such a way and with so repetitions that it becomes even a bit annoying. Those bailing programmers are also a bit annoying. Quotes from Lewis Carroll seem a bit off topic too. Of course it's just my opinion. In general I think the book worth its money and recommend it to everyone interested in the subject. Prerequisites are simple: knowledge of C and general POSIX. E.g., I recommend a book by Mr. Gallmeister on real-time (non-multithreading) POSIX.     