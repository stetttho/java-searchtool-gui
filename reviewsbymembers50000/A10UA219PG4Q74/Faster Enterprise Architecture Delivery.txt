 Clive Finkelstein's Enterprise Architecture for Integration: Rapid Delivery Methods and Technologies tackles the problems of designing and implementing architectures while trying to balance the need for speed prevalent in all IT projects.    The author begins in Chapter 1, "Enterprise Architecture and Enterprise Engineering", by describing the Zachman Framework, then Enterprise Engineering.  It is in this second segment where a concept often missed by other authors is covered.  After giving a list of well-known problems with existing development methods, he states:  "... few industries and enterprises can say today that their future will be like their past. Most know that the future will be quite different. The only certainty we have is that the processes we will need then are quite different from the processes we use today."  This key point is important for all architects to understand.  It's not just detailed business rules that change, its entire business models that change - and often this change happens even if the organization is not looking for change.  Readers who keep this thought in the front of their mind will understand why activities such as strategy planning and the implementation of enterprise architectures are necessary.  Templates for many of the questionnaires, deliverables, student exercises and solutions are provided on an accompanying CD, as are trial copies of modeling and code generation tools.   Overall I felt the work was a valuable addition to my enterprise architecture library.  However, I did find that the jump from strategy to design was too quick.  In my opinion, there should have been more guidance provided to an architect changing from enterprise planning activities to design activities.  While the book did talk about time frames, I was hoping to see more tips about how to get things done even faster.    I also worry that the sections on tools and standards, while very valuable to today's reader, will lead some, even a year from now, to assume that the entire work is outdated.  There will be plenty of content in this work that is relevant for years to come.   What I found most valuable in this text is the numerous citations of real enterprise architecture project methods and deliverables.  These examples are pulled from large, well-recognized organizations.  This use of non-trivial, real life examples brings a significant understanding of feasibility and credibility to the work as a whole.  This is a real strength of this book.  I appreciated Finkelstein's emphasis on the derivation of models as much as possible.  When I hear that architects intend on manually creating and cross-referencing all their enterprise architecture components, I know that they will almost certainly be headed along a path of increasing large amounts of raw data, obsolete meta data, and decreasing confidence in their efforts.    Also done well is the normalization chapter.  Finkelstein does a good job explaining normalization without delving into technical or mathematical trivia that can be an obstacle to tying design to business needs.  He manages to hold this business-focus all the way through 5NF, 5BNF as he calls it.  Of course, it is still very important for a modeler to understand the math behind normalization, but not every presentation of normal form need be presented with these details.  I enjoyed reading the final chapter on the future of enterprise architectures.  It's always exciting to read through these types of sections now and ten years from know.  I believe the recommended audience for this book should be project managers, data architects, enterprise modelers and architects, and developers.   While this work does cover some technical details about emerging technologies, the discussions are appropriate at an overview level.  What I found most valuable were Finkelstein's underlying foundations and thoughts behind use of tools, derivation, and automation.  Given the size and complexity of enterprise architecture and integration projects, those are the same underlying principles that we have to use to be successful.     