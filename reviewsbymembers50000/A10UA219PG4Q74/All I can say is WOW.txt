 It's been a long time since I stayed up late reading an IT-related work.  This relatively short work had me saying 'Yes!' about every other page. A little background on my prospective:  I work on committees that accredit university and college IT programs in Canada.  I also am a member of committees that award non-vendor specific professional certifications for information systems professionals. I'm a proponent of motivating our industry into more professional approaches to development and deployment. For too long we've been allowed by society to produce software failures with very little accountability.   McConnell begins this work by describing where our profession has been and why it has been that way, addressing software dinosaurs and prospecting (the reference to gold rush in the title).  He then goes on to explain the difference between professionals and technicians, as well as the difference between Computer Science and Software Engineering.   He also covers topics of ethics and licensing of _certain_ levels of the IT industry.  This area causes a great deal of anxiety among some members of the industry as seen in other reviews here.  These fears are unfounded.  All professions have various levels of practice and include both professional level licenses as well as technician level certifications. All levels need to understand ethical implications of their work, but professionals need to fulfill their responsibility to protect the public as well. This book would have received 5 stars from me, except that I believe his scathing description of Computer Scientists is unwarranted and close minded.  There must be something behind his feelings about CS, but he doesn't do a good job of explaining why.  I am not a computer scientist, by the way.  My degree is in Information Systems, an area of study that he doesn't address.  It's a shame, because I think that quality Information Systems programs have a better fit to Software Engineering than CS. Also, he make frequent references to a well-known Software Engineering university program while glossing over that program's stance on the need for all Software Engineers to study the same standard engineering natural sciences (chemistry, physics, physical structures, materials, thermodynamics, electrical engineering, etc) as Civil, Mechanical, Electrical, and Chemical engineers have to.  He also discusses another more practical program at another university that does not take that misguided approach to Software Engineering. While he points out the difference, he misses a great opportunity to comment on this disparity. This McConnell work will be seen as truly visionary in 10 years.  I just hope that more professionals will recognize the importance of what he has to say and take action now. Those of us in the IRM area of IT already know the importance of spending some time thinking before coding, planning before doing, and testing before releasing, so those parts won't be new to us.  This work is only 150 pages or so, but it packs a lot of punch into those pages.  A classic that needs to be on every practitioner's shelf.     