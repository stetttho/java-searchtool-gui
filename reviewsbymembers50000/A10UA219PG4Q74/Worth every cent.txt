 I couldn't possibly review the entire content of the work in the space provided. What I can do is give you an overview of the contents and tell you what I like about this work and what I find as weaknesses.  A more detailed review is available on my website due to review size constraints here. Volume I contains universal models for: -	People and Organizations -	Products -	Ordering Products -	Shipments -	Work Effort -	Invoicing -	Accounting and Budgeting -	Human Resources There is a short section on how to transform these logical data models into data warehouse models, along with some sample star schema models for Sales Analysis and Human Resources at the detailed level, with some brief examples of other star schema for the other models in the first half of the book.  This title also includes about 40 pages on how to use and implement universal data models in general.  While this attempts to cover at a high level the basic activities of data and process modelling along with database design, the reader should understand that the author could not possibly cover the section in any significant detail in the same book.  Other texts I've recommended on this website would fill those needs.  Strengths The first really joy of this work is that Silverston indicates at the beginning that he expects that these models will be revised, customized, and enhanced when applied to a real life problem.  This obvious approach demonstrates Silverston's wealth of industry experience, over 20 years of information technology work. As I worked my way through the models, it became obvious that these were based on data modelling efforts in the real world.  The models themselves show a maturity that is rarely found in many data modelling works.  There are still complexities that are not addressed, but I wouldn't be looking for those sorts of details in this type of book. I find the inclusion of sample data values for key entities a great strength of this work. Overall the models themselves follow, for the most part, good data modelling style and standards.  The logical models are normalized, but in a practical way, not in an academic definition of normalized.  What I mean by that is there are a handful of attributes that would not meet the strict criteria of normalization, but they have been denormalized in a way that is very, very common.  For instance, one can find Address Line One and Address Line Two attributes in the Person and Organizations model.  I don't consider this a weakness, but the author should have indicated that short cut was being used in this case. The fact that this work includes a Party concept (and did even in its first edition) is admirable.  Silverston's enhancements to the Party models since his first work show how flexible and valuable this concept can be.  In the last year or so, the pendulum has swung the other way; now people can be quite irritated if a modeller does not understand the Party concept.  He even includes 3 common design options for implementing Party. Weaknesses The book uses the Oracle/Barker notation for its diagrams and sample models. While the use of this notation is common due to the fact that Oracle modelling tools have a large installation base, its always seems odd to me that several data modelling books that hope to discuss vendor-independent and tool independent approaches to a logical data model choose to use a notation that is exclusive to one tool on the market.  I don't believe there's anything wrong with the notation; I find it clear and acceptable for data modelling.  I just wish that authors would choose a more commonly understood notation.  A brief explanation of the notation is included in the first chapter of this work. A common drawback of many Oracle models I see is that they follow a naming standard for relationships that leaves out the implied `to be' form of the verb in the relationship name.  So instead of using "is included in" the relationship, the sample modes might use "included in".  That in itself is not really a problem. The problem becomes apparent when modellers tend to use relationship names that look or act more like nouns than verbs.  For instance, in the Invoice Specific Roles model, there's a relationship between SALES INVOICE and INTERNAL ORGANIZATION. This relationship is labelled "billed from" on one side "the sender of" on the other.  These do not, to me, appear to be the same relationship, even if they are on the model. This sort of discrepancy can lead to modelling errors and oversights.  The full verb-based approach to naming relationships would most likely use labels such as "sends" and "is sent by", clearly the same relationship.  There are also several relationships that use the label "of" or "for", which to me add no more of a definition to the relationship than existence of a line between the two entities.  These are not isolated occurrences; they appear to be a style of modelling used throughout the book. Silverston's data modelling style is more informal than mine in that he does follow many common standard approaches to creating and naming modelling objects, but deviates from them in several places. He does follow, for the most part, a QUALIFIER NOUN CLASSWORD approach to naming attributes. This brings up another weakness in this work, something that I'd hope would be changed in the next edition:  these models are very tailored to American businesses.  The use of the name above "Total Dollars Allowed" is not acceptable to me, even when used in a U.S. business.   These weaknesses are not significant, nor do they impact greatly on my decision to recommend this book.  I'd hope that future editions would improve upon the weakness, but they are obstacles to using the models in the real world. Please see my other review on this site concerning this included CD.     