 I've been using computers for over a quarter century, so I've seen a pretty broad range of user interfaces. Cooper realizes that a computer must be a tool, and that good tools simply do a job and make it clear to the operator just what was done. They -don't- get in the way just to make things easier for the programmer. Cooper talks about how to build good computer based tools, the "features" that get in users' way as well as the sorts of features that help users get their jobs done. This is how you write software that generates fanatical loyalty in its user community. It solves -their- problems, even if it makes the programmer's task a bit harder. Cooper makes the controversial assertion that error messages often just cover up situations the programmers didn't want to bother with. I've seen variants of this principle hold true in data communications and in robotics, where you don't have a human operator to bail you out. Cooper is right. I hope someday all GUI developers are held to Cooper's standards. Rick Smith.     