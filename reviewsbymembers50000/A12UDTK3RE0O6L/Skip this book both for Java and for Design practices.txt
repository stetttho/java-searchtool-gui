 I will not write an extensive review because I think just about any book is better: Try "Design Patterns" by Gamma, Helm, Johnson, and Vlissides, "Thinking in Java" by Eckels, "Concurrent Programming in Java" by Lea, and "The Practice of Programming" by Kernigan and Pike for books which meet and exceed all the goals of this book. That having been said: this book is a terrible book because of several severe errors in content (mostly dealing with concurrent programming) and the author's almost exclusive reliance on pictures and diagrams to make points rather than prose and explanations. Perhaps if he would discuss the meaning of his pictures and diagrams (which are in some form of UML, of which being  a professional user, it was very poorly done) and use them on marginally real-world examples, the book would have been better. A final issue with this book is the author never justifies most of his assertions, nor even explains partially the "why" of many of them. Although I read many books, and some I may indeed consider "below me" in that I already fully understood and/or applied their contents, almost every book I read has some perspective, topic, or point from which I learn or verify my current knowledge or practice. This book, honestly, had none, and was misleading or downright wrong on several. In sum, this is perhaps the worst Java or Design book I have read, and I have a seven foot by four foot bookshelf (and then some) devoted to computer books. Not recommended.     