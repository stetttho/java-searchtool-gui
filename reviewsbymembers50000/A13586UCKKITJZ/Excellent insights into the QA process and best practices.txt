 This book is not about the actual procedures and techniques for software testing.  If you are looking for this kind of information there is an array of other books from which to choose.  I am not, nor will I ever be a software tester (my career as a service delivery consultant suits me fine).  I bought this book to fully understand the software testing process that precedes bringing an application into production, hoping to use this information to bridge the relationship between my side of the fence, service delivery, and my colleagues on the application delivery side. This book gave me some keen insights into the testing process and what constitutes best practices.  Prior to reading this book I had a vague idea about the challenges of software testing. In fact, I had some unreasonable expectations, such as expecting applications to be 100% tested before they were released into production. The authors gave some excellent reasons why this is technically unfeasible, and also why such coverage did not make sense from a cost/benefit point of view.  This risk management approach appealed to me and made perfect sense. Another valuable insight I gained from this book is what constitutes good testing and what I should be expecting in the form of deliverables from the test organization.  This information gave me some excellent ideas about how to frame entry criteria for change control in view of the fact that any change to a production environment needs to go through testing before it is implemented and released into production.   I also learned a great deal about standards with which a mature testing organization must comply, and how to measure the quality of deliverables that are provided to production services by testing. This book is easy to read, if as much focused on business requirements as it is on the testing process itself, and offers a wealth of advice to IT managers and test/QA managers.  I can attest that it is also valuable to service delivery practitioners who want to fully understand and appreciate software testing. It would also be invaluable to developers who want to understand how they can closely work with the testing group in a less adversarial way.     