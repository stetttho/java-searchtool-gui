 My background is not software engineering - it's service delivery and process development. I got this book on a strong recommendation from my mentor because one of my techniques, information mapping, has some gaps when it comes to portraying processes.  I had heard of use cases before getting the book, but paid little attention to them. Mr. Cockburn gives one of the most sensible, logical approaches to capturing, validating and modeling requirements I have ever come across.  My initial concern that this book was focused on software requirements was assuaged by the numerous case studies that address processes and policies.  This is the heart of what I do, and the book gave complete coverage of it.  Of course software engineering-specific material is also addressed since this discipline has the biggest audience. The sections from which I got the most knowledge are:  setting scope for the use cases and the way to use a hierarchy of use cases to depict increasing levels of detail, business process modeling, and the tips for writing use cases. This material pointed me in the right direction for resolving some of the shortcomings inherent in information mapping, and also gave me some fresh ideas on how to effectively and clearly develop processes that are traceable to requirements. One of the things I liked most about the book is its fast pace and reasonable page count.  There is no fluff, and at approximately 300 pages it is an easy read for someone on a busy schedule.  My personal opinion is that this book should be promoted to a much wider audience than software engineering - the approach and techniques will certainly serve the software engineering community well, but are also practices that business analysts, process engineers and others in IT can effectively employ. This one goes in that special section of by library that is reserved for books to which I frequently refer.     