 I got this book to update my professional skills. My technical specialties are service delivery and production support, and my background is in traditional data center environments. With more than 25 years of mainframe and distributed computing I felt that I had better get up-to-date or I'd be left behind. Based on the title I was expecting a book that would give me insights into how web sites are developed with an emphasis on capacity and performance planning. Although this wasn't exactly what I was looking for it seemed to be close enough to give a basis for extrapolating what I needed. As it turned out, the book provided me with exactly what I needed: a clear view into web site development and deployment that is framed in a life cycle structure.   It starts out with an overview of software engineering principles (not development techniques) and quickly emphasizes the need for process models.  This is followed by some basics about the web, networking and how the web works.  This is pretty fundamental stuff that can be safely skipped by experienced web developers who are interested in the process.  Since I am not a developer and relatively new to the technology I liked this section. The [system] engineering process begins in chapter 4, and follows a standard life cycle model for the remainder of the book.  Problem definition, concept exploration and feasibility analysis are given standard treatment - this is systems analysis 101 material, but is thoroughly covered and a good refresher.  The same holds true for the chapter on requirements analysis and specification.  When you arrive at chapter 6, Designing the Web Site, the unique requirements of web design are highlighted and the book becomes very interesting.  I like the way application and information are distinguished, and the emphasis placed on usability.  This is a marked departure from how systems were developed during the early days in my career when the user interface and human factors were an afterthought - if they were thought of at all. Chapter 7 is the only place in the book where any "web engineering" is addressed. I personally learned a lot from the discussions of client- and server-side technologies, tools and content management. However, an experienced web developer might find this material to be lightweight.   The rest of the book placed implementation, testing, promotion into production and ongoing management into a familiar context that faithfully follows traditional life cycle and production support methods.  I was gratified to see the emphasis on testing, release and post-implementation management because I do not see these in practice when it comes to web implementations.   My view of web development and implementation prior to reading this book was that it is performed by extremely bright-but undisciplined-men and women who did not understand processes. This is based on personal observations of web projects - the projects all seemed to end after development and "thrown over the wall" to production support.  Testing is hit-or-miss and there is no real release methodology. This approach usually results in web sites that are chronically broken, and if commerce is involved, do not have the trust of users.   This book provides a clear roadmap for "engineering" and implementing a web site the right way.  It starts with proven processes and aligns them to the fast cycle times and rapid implementation needs that characterize information technology in today's world.  If you are an IT or project manager this book will provide you with excellent guidelines for a web development and implementation methodology.  If you are working in production support you need to get this book into the hands of the team who will surely try to slip their web site into your domain - this book will communicate your requirements to them in their language.     