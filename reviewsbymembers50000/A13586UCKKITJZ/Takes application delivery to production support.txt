 This book provides set of well designed patterns from which to develop service delivery processes.  This is the only book I have come across that manages a clean, seamless segue from application delivery to service delivery.   First, to appreciate this book's approach it is important to know what OOSP and patterns are - this will set your expectations about the book and what you can get from it. OOSP stands for Object-Oriented Software Process.  It is an approach to software development within the context of object-orientation.  Put another way, it is an object oriented approach to application delivery. Both of my definitions fall short, but if you are familiar with the unified modeling language (UML) or the Rational Unified Process (both of which are nearly inescapable judging from the sheer volume of literature on both subjects) then you will get the idea. Patterns are like templates for actions and activities. Using a pattern assures a high degree of consistency in presenting a collection of activities, and also allows you to distill the key elements of a particular process into a succinct format.  What I especially like about the concept of patterns is that provide a "container" into which you can capture best practices for any process. This book presents a set of patterns for the final stages of application delivery (i.e., software development)and segues directly into service delivery.  The patterns grouped into phases that roughly follow the Rational Unified Process, and the phases are further grouped into stages. From the application delivery point of view, the processes are: test and rework.  The bridge to service delivery is provided in the release stage processes.  From there the processes are firmly in the service delivery domain, starting with the assess stage, and moving into the maintain and support phase.  One of the best parts of this book from a service delivery practitioner's point of view is the "Identify Defects and Enhancements". This if often overlooked in the body of literature for applications and service delivery (but is a key process in software quality assurance).  The patterns associated with this stage are an ideal vehicle to communicate operational requirements from service delivery back to application delivery.   I also liked the project and cross-project tasks that are presented in this book.  As the co-developer of the Tarrani-Zarate Information Technology Management Model one of the fuzzy areas was the link between maintenance and support and the project-related tasks. This section clarified some of the dependencies and linkages. What did this book do for me?  As a service delivery practitioner it gave me a clear understanding of the potential synergies that can be achieved if application and service delivery are treated as a coherent whole.  It also heavily influenced my thoughts when developing the Tarrani-Zarate model, and refined my view of service delivery.  It also showed the value and power of employing patterns for capturing best practices.  As such, this book is probably of value to knowledge management practitioners. What does this mean to you? It depends on your role.  If your role is project manager, in development or QA/test, then the process patterns provided will underscore the fact that development is not complete until the product is in production. If you are in production control, production support or applications support (help desk, tier 2 or 3), then this book provides some excellent ideas on how to "connect" service delivery to application delivery.  If you are a project sponsor or business process owner, the defects and enhancement stages are a good starting point for understanding your role on a configuration control board at the project or product management level. The author sums up the key point of this book with a quote from his web page: "A good developer knows that there is more to development than programming. A great developer knows that there is more to development than development."  To paraphrase, development isn't what it is about - it's about delivering functions to business users so they can do their job.  This book provides ideas and tools to do this.     