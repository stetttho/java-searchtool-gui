 This book's collection of process patterns is the foundation for best practices in applications delivery, and align to a variety of methodologies, including the Rational Unified Process.  These patterns can also be used as the basis for key process areas for achieving increasing levels of capability maturity or process improvement capability for organizations that use SEI's CMM or ISO/IEC 15504 (SPICE). Chapter 1 assumes no prior knowledge of patterns or object-oriented software processes, and gives a descriptive overview of both.  It also discusses various approaches to software development, which provides a context for how patterns can fit within various approaches, such as serial, iterative, incremental or parallel projects.  It also introduces a process framework called Object-Oriented Software Process (OOPS)and compares this process to other common OO approaches to development.  Although this book is structured for OOSP, the patterns will fit within any framework or methodology. This makes the book valuable to any shop regardless of whether OO or traditional procedural languages and approaches are used.  A highlight of this chapter is the discussion of process maturity that uses SEI's CMM as a baseline.  The information can be realigned to SPICE or Bootstrap as well because there is no firm bias towards the CMM - I suspect the CMM is used because it's well known to U.S. readers. The book is divided into parts after chapter 1, with each part aligned to a life cycle stage and comprised of a collection of chapters that describe patterns that are applicable to the stage.  Each chapter is a pattern and is structured as Initial Context, Solution, Solution Project Tasks, Resulting Context, Process Checklist and What you have learned.   Part I is the INITIATE stage.  Patterns include:  Initiate Phase (how to start the phase itself), Define and Validate Initial Requirements, Define Initial Documents, Justify and Define Infrastructure.  Part II is CONSTRUCT, with patterns for Construct Phase Initiation, Model, Program (development), Generalize and Test in the Small. What I like is the format of the patterns make them easy to read and consistent.  It is easy to tailor them for organizational use, as well as to add more patterns.  It also adds a defined structure to the development process itself, providing a solid basis for documenting key process areas and defining development workflow.  The second book in this series, More Process Patterns, completes the pattern library by addressing test, release and operational aspects of applications and systems.  I read that book last February and feel that both books should be a part of any mature development organization, or organizations that are seeking to improve their processes and capabilities maturity.     