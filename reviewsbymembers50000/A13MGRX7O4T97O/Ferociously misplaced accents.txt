 The "good old petzold" -- why has it always been and still remains so good? Because Charles Petzold went laboriously over the *Windows API*, and described its operation in a detailed, blow-by-blow account. No feats of design, no showing off of the personal greatness by concocting something very great on top of the OS interface, just the API, so that the reader could learn how the thing works and then apply it in his own work. Richter did the same in his Windows programming books, and they're deservedly respected by the programming community too. Why am I talking about this? Because the author of "Windows Telephony..." did exactly the opposite. Perhaps he's a great C++ programmer and an excrutiatingly gifted software designer, but what I needed was a description of TAPI in its most nitty-gritty detail, not the author's C++ library he built on top of it. I can't use his library (nor do I like the way it's designed, btw) while the TAPI's "bare" functionality is not covered in sufficient for my needs detail. Which resulted in a pretty damn useless book. Which is a shame, given a dearth of information on the topic.     