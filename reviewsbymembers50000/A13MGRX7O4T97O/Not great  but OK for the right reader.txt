 PROs:  - The book covers the right topics presented in a sensible logical progression.  - The book comes with a good chunk of real, functional source code that can be profitably studied (the main value of this book imo).  CONs: - Like every single CMP (fomerly R&D) book, this one is rather poorly written and sports a good number of ridiculous typos that  a run through a spellchecker would fix. - The book is introductory, not indepth. - Nitpicking: binding's bad, crack the book open once and it starts falling apart.  Even though it is suggested in the Introduction that this book targets both programming novices and competent general-purpose programmers entering the embedded realm, I feel that only the latter group stands to benefit here; a total neophyte will be confused by the disjointed, imprecise, and sometimes misleading writing. But someone already familiar with the universally applicable computing basics can probably compensate for writing deficiencies while picking a number of useful things specific to the embedded area; in that respect the book is instructive.   Overall, it's kind of like the Labrosse book (on uCos) -- a painful read significatly compensated by the opportunity to study the attached source code. Another comparable book is Barr's "Programming Embedded Systems in C and C++", which is by an order of magnitude better written but at the same time somewhat skimpier than this one.     