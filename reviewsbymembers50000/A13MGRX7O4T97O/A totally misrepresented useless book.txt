 The author undertakes to teach you control systems w/o underlying mathematics. Well, I thought, that's nice (and, needless to say, it makes a good selling point), but... there's one but here: it may not be possible. And indeed the author has not succeeded at his stated goal. Not only that, he hasn't even tried: without any preliminaries (other than the declaration of intent to make it simple) the author starts bashing you over the head with s-notation (Laplace), poles and zeros, state space, swiped sines, linear/non-linear DEs, root locuses, eigenvalues, covariant matrices. etc. If using complicated things (after promising not to) w/o explaining or even defining them first in any way means making it simple, then this book is a success. I however, don't see it this way.   Here's the missing reality check: in order to understand what's going on there you need to be comfortable with: complex, vector, and matrix analyses, integral transforms (Laplace and Fourier), and signal processing. In other words, you need to have studied control (and that, of course, implies a solid mathematical background). You also need to know Matlab, or at least understand how one works with it in general.  The C++ aspect of the book is a joke: there's two and a half primitive snippets of code that any idiot could write if he knew what is to be achieved -- and for that you need the things I've mentioned above. Why it's in the book I can't fathom... maybe to have a pretext, no matter how thin, for putting the "in C/C++" on the cover.   Well, OK, the first few chapters (like, three) do present a few useful things (PID controllers and tuning) in an understandable way (how's your calculus, btw?). The bibliography is decent too: small, but pointed and of good quality (though no surprises here: for integral transforms, go for Churchill; for system identifications, Ljung; for signals, Oppenheim... but we already knew that, didn't we). In fact, why stop here: there are very good control textbooks as well -- Astrom, Ogata, etc., etc. Full of math, yes, but not promising anything their authors have no intention of fulfilling. Once you're through the texts like that, you'll be able to digest Mr Ledin's book (of course the question then becomes, what the hell you'll need if for?)   Another question: what's the deal with the word "embedded" in the title? There's zilch in this book about anything specifically embedded. Another sales-enhancing magic word?  Bottom line: being smart enough to understand this book implies that you don't need it; not being smart enough... well, then it seems like you don't need it either. I have no doubts that Mr Ledin is a very smart engineer -- and god bless, more power to him here -- but as to bookwriting... What good is this book? Who's it for? No simple mortal fits the bill: everyone will be either too smart to need it, or too stupid to understand it.  Regrettably, "Embedded Control Systems in C/C++" is yet another typical CMP book -- expensive, misrepresented, and useless. Oh yeah, and it's poorly written too (but that's the least of this book's flaws).  Absolutely not recommended.     