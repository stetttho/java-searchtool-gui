 Real quick: PROs: - the book's written in short sentences and can be read very rapidly (well, almost, see below)  - it contains no vapour whatsoever - the overall structure is very logical - it comes with a ThreadX emulator for Windows on CD  CONs: - the book is almost literally a reprint of Express Logic's User's Guide that is available for free download off of their site. Only a few perfunctory code samples are added so far as I can see.  - The book's extremely superficial. Extremely. The below reviewer says it's the best embedded book he's ever read: I wonder what motivated him to say such nonsense in public, and what other embedded books he's read (also, see Note below). According to the cover blurb, the author is a Professor Emeritus of Computer Science. This is not a professorly book in the sense that the Art of Computer Programming is a professorly book. You know how you usually get three books with a package: a Quick Intro Guide brochure, a 1000-page Programmer's Guide, and a 2000-page Reference. This book is the Quick Intro Guide.  - it's padded (the book is 350 pages long, the last 100 pages -- nearly one third -- is the API reference, a more comprehensive version of which is available for free download on Express Logic's site: I can't see any reasons for inclusion of this material in the book (other than padding, of course).  - I said the book is written in short statements which enables very rapid reading. This by itself is good, thanks to the author and editors, however! It is not well-written, which oftentimes eliminates the advantage of being written simply. The writing is frequently careless, unclear; and the structure, although appearing perfect on the Table of Contents level, becomes muddled and illogical on the subchapter level -- all unmistakable signs of being thrown together hastily. An example, right off the top of my head: at the xx.xx.xx level one subchapter is called "Round-Robin Scheduling", the next one (at the same level) "Time-slicing". From that it would appear that the two are distinct (the first is round-robin; the second isn't, but is someting else), but if you read the text you'll find out that both are actually round-robin, although under the former approach, threads yield execution themselves, whereas under the latter, they're pre-emtped based on their time execution quota -- but both are scheduled in on the round-robin basis. As you can see, the clear structure would have a single xx.xx header "Round-Robin Scheduling" and then two subheads on the xx.xx.xx level, "Yield-based mode", and "Time-Quota-based Mode". As it is, the info communicated on the subheads level contradicts that which is actually communicated in the actual text; it first suggests a wrong conceptual view of the matter that the reader then has to overcome on his own; this impedes comprehension. This is not the only example.   The most significant flaw as I see it is that the book, while obviously being targeted at the absolute beginner, is written way too sloppily for such a reader. An experienced person will not be thrown, but an experienced reader is not the target audience here. I had absolutely no conceptual challenges in this book, the thing I sought -- and got out of it -- was an overview of how ThreadX does the things that I'm well familiar with on other platforms (threading/mutexes/semaphores/memory management). In this the book has been marginally adequate: it *is* a whirlwind tour of the system and relevant h/w platform. At the same time, it's an obvious hack job done hastily and carelessly owing most likely to the author/publisher's drive to quickly cash in on the topic.  To potential buyers I would recommend to begin by paying a visit to the free-downloads section of Express Logic's website and reading what they've got there. Then, if you want more, check the book out in store and see for yourself if you still want it. For me, I don't think it's so bad as to justify returning it, but it's been an impulsive purchase on my part; I did not check it out properly, and had I known then what I know now, I would probably not have bought it. Not at the list price at least (it's expensive).  A quick followup: for ARM, get "ARM System Developer's Guide" by Sloss, it's a good book; fundamental, very extensive and well written. For ThreadX, download the vendor's documents as mentioned above: they're exactly the same as what's in this book, only more material (and it's better presented).  Note: A warning: I don't trust John Matlock "Gunny"'s review (below) -- if you want to know why, go check his reviews page. He posts a high number of reviews -- every day, since the beginning of time, on books of such a wide topical variety that I can't believe he's actually read them. He also tends to like them (mostly five stars). It looks like someone hires people like John Matlock "Gunny" to post fake reviews here (yes, he's not alone, just pay attention). Whenever there's one of those "Top [n] Reviewer"s I smell a rat.     