 The book is about 500 pages overall, but only about a hundred pages have something readable on them; the rest are opcode tables -- nicely printed, but not terribly instructive. Oh, and the author also takes some space to tell you that he has eight children, and that it's the third book he's written, and that you need to get the other ones, and that he has two brothers, and that his two brothers also write books, and that you'd better get their books too, although they write fiction rather than technical, and so on and so forth, and on, and on, and more donkey diarrhea like that.  OK, back to the essence: by most part the book is a selective reprint of the freely downloadable Intel instruction-set references -- not nearly as detailed, but grouped by function (rather than alphabetically) and with comments/sample code at times. This, especially the grouping, is good, but ultimately does not save the book. Why:  First, a couple of articles' worth of stuff does not make a book -- there's simply not enough original material. Which insufficiency is (second) 'compensated' by padding the book with reference material (tables, tables, tables, and more tables; literally hundreds of tables-only pages). Third, and most important: the author has no writing aptitude. If he must write at all, he should team up with a competent technical writer, otherwise there's no hope: this text is disjointed in the highest degree and downright imbecilic at times: the guy seems to be oblivious to the fact that words mean something, and that in order to communicate information one has to carefully pick the right ones and assemble them in a meaningful way. For example, BSF, he says, scans for the LSB. Well, the LSB is in position zero and doesn't need to be scanned for! What BSF does is scan in the least-to-most-significant direction for the earliest bit that is set. Which is probably what this idiot thinks he's been saying all along. Now, this is a simple, immediately obvious example; what will happen when you get to more esoteric instructions? Go to Intel and download their free books; they're not perfect, but they are decent -- you'll be better off with them.  This is the second book by Leiterman I got; the first one (Vector Game Math Processors) had the same flaws; it's been sitting on my shelf for a couple of years and proved consistently useless. Both books are very attractive visually; the tables of contents appear promising; about one tenth of each book looks like it could contain some value -- but, once you get to it, it's invariably not enough material + lots of padding + very poor writing, and I mean _really_ poor, unreadable. While I'm at it: the publisher is Wordware, which, as I came to understand now, is a giveaway -- I've not seen one good book from them.  I'm sending this book back.  PS. Btw, I suspect that the review below is the author's promo blurb posted by a friend; the reason I think so is that it repeats a baseless claim -- that most other assembly books "present bogus examples in an artificial assembly dialect" -- that is also made on the author's own website (as of April 21, 2006), in his resume. I quote, " It [the book] ... contained real life code samples that one could use within their applications, not made up nonsense code you usually find." If you look at the Amazon page for the other Leiterman book I've mentioned, you'll notice that the very first reviewer there makes pretty much the same claim: must be yet another flunkey willing to use his "real name" to palm off advertising copy as genuine review info.  Of course the idea itself is completely false (I have a pile of assembly books; most are quite good; they definitely do not routinely sport noticeable amounts of made-up nonsense code or bogus examples in an artificial assembly dialect).     