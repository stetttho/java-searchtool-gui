 A pleasant surprise: a good book from CMP; not bad for a change. Someone below complained that it's disjointed, well, I'd rather say it's literarily imperfect, but in that particular case I'm willing to forgive stylistic quirks -- for two reasons: first, it's not *that* bad relative to the area, it reads OK; and second, whether well written or not, the book is very instructive, contains no bs whatsoever, the density of good stuff is high.   What I also liked quite a bit here is that the author goes beyond basic exposition of the subject matter; in addition to covering the code in the book, he also explains his own thinking, problems he encountered, tradeoffs he faced, possible alternatives and what -- and why -- he ultimately settled on, and what the reader could try instead, what to tweak, what to expect from such tweaking, and so on. This is a great, mind-expanding approach the reader stands to benefit from (quite irrespectively of the subject matter, actually). For example, even though the book is mostly about software, the author includes the relevant hardware issues -- without getting bogged down in irrelevancies, but in sufficient detail which is very helpful in the overall scheme since it shows the reasons for design decisions.   The author comes across as a bona-fide knowledgeable, experienced, and likeable person who has "earned his epaulettes" in real life with real stuff, who has something to say, and who is quite generous in telling it.  All I can say is that I'm pleasantly surprised (especially this book coming from CMP whom I have already written off as a shoddy publisher); that because of reading this book I've had a few helpful and timely for my own work ideas -- it's been pleasant and instructive at once. Recommended (not only for TCP/embedded/PIC developers -- this piece holds something useful for anyone, I think).     